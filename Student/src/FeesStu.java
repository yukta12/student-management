
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.coobird.thumbnailator.Thumbnails;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class FeesStu extends javax.swing.JFrame {

    /**
     * Creates new form FeesStu
     */
    public FeesStu() {
        initComponents();
        conn = DbConnect.connectDB();
        txtPaid.setEditable(false);
        btnUpdate.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jcbOs = new javax.swing.JCheckBox();
        jcbJava = new javax.swing.JCheckBox();
        jcbCS = new javax.swing.JCheckBox();
        jcbSE = new javax.swing.JCheckBox();
        txtEnroll = new javax.swing.JTextField();
        txtPaid = new javax.swing.JTextField();
        txtPending = new javax.swing.JTextField();
        rbtCash = new javax.swing.JRadioButton();
        rbtCheckque = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbTable = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jcbOs.setText("OPERATING SYSTEM ");
        jcbOs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbOsActionPerformed(evt);
            }
        });

        jcbJava.setText("JAVA ");
        jcbJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbJavaActionPerformed(evt);
            }
        });

        jcbCS.setText("SECURITY");
        jcbCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCSActionPerformed(evt);
            }
        });

        jcbSE.setText("SOFTWARE ENGG.");
        jcbSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSEActionPerformed(evt);
            }
        });

        txtPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaidKeyReleased(evt);
            }
        });

        txtPending.setEditable(false);

        buttonGroup1.add(rbtCash);
        rbtCash.setText("CASH ");
        rbtCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCashActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtCheckque);
        rbtCheckque.setText("CHECKQUE");
        rbtCheckque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCheckqueActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jtbTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtbTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbTable);

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jButton3.setText("CANCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("LOAD ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbOs)
                                .addGap(27, 27, 27)
                                .addComponent(jcbJava))
                            .addComponent(txtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbCS, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbSE, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPending, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbtCash)
                                        .addGap(38, 38, 38)
                                        .addComponent(rbtCheckque)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbOs)
                    .addComponent(jcbJava)
                    .addComponent(jcbCS)
                    .addComponent(jcbSE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPending, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtCash)
                    .addComponent(rbtCheckque))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void jcbJavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbJavaActionPerformed
      if(!jcbJava.isSelected()){
          total = total - jpr;
          txtPaid.setEditable(false);
          javap = "0";
          
      }else{
         javap = "1";
      total = total + jpr;
      txtPaid.setEditable(true);
      
      }
    }//GEN-LAST:event_jcbJavaActionPerformed

    private void jcbCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCSActionPerformed
      if(!jcbCS.isSelected()){
          total = total - cs;
          txtPaid.setEditable(false);
          cse = "0";
          
      }else{
          cse = "1";
      total = total + cs;
      txtPaid.setEditable(true);
      }
    }//GEN-LAST:event_jcbCSActionPerformed

    private void jcbSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSEActionPerformed
       if(!jcbSE.isSelected()){
          total = total - se;
          txtPaid.setEditable(false);
          sen = "0";
         
      }else{
       total = total + se;
       txtPaid.setEditable(true);
       sen = "1";
       
       }
    }//GEN-LAST:event_jcbSEActionPerformed

    private void jcbOsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbOsActionPerformed
       if(!jcbOs.isSelected()){
          total = total - os;
          txtPaid.setEditable(false);
          osy = "0";
          
      }else{
           osy = "1";
       total = total + os;
       txtPaid.setEditable(true);
       
      }
    }//GEN-LAST:event_jcbOsActionPerformed

    private void txtPaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidKeyReleased
        
       

    }//GEN-LAST:event_txtPaidKeyReleased

    private void txtPaidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidKeyPressed
        if(txtPaid.getText().equals(""))
                    txtPending.setText("");
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_TAB ||evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER ){
         try {
                if(total - Integer.parseInt(txtPaid.getText())>= 0)
                txtPending.setText(total - Integer.parseInt(txtPaid.getText())+"");
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_txtPaidKeyPressed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
             String sql = "INSERT INTO fees(enrollmentno, os,java,cs ,sen,totalfees,feespaid ,pending,paidby) VALUES (?,?,?,?,?,?,?,?,?)";
             preparedStatement = conn.prepareStatement(sql);
             
             preparedStatement.setString(1,txtEnroll.getText());
             preparedStatement.setString(2,osy);
             preparedStatement.setString(3,javap);
             preparedStatement.setString(4,cse);
             preparedStatement.setString(5,sen);
             preparedStatement.setString(6,total+""); 
             preparedStatement.setString(7,txtPaid.getText());
            preparedStatement.setString(8,txtPending.getText());
             preparedStatement.setString(9,paidby);
                         
            boolean stmt =  preparedStatement.execute();//it will execute the query anf return true or false ki execute hua ki nahi
           
             JOptionPane.showMessageDialog(null, "record inserted");
             System.out.println("inserted");
           } catch (Exception e) {
               JOptionPane.showMessageDialog(null,""+e.getMessage()); 
        }
    }//GEN-LAST:event_btnSaveActionPerformed

     private void updateTable(String sql){
        try {
             preparedStatement = conn.prepareStatement(sql);
             rs = preparedStatement.executeQuery();
             jtbTable.setModel(DbUtils.resultSetToTableModel(rs));
         } catch (Exception e){
             JOptionPane.showMessageDialog(null,"issue "+ e);
         }
         finally{
             try {
                 rs.close();
                 preparedStatement.close();
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(null,"issue"+e);
             }
         }
    }
    private void rbtCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCashActionPerformed
        paidby = "CASH";
    }//GEN-LAST:event_rbtCashActionPerformed

    private void rbtCheckqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCheckqueActionPerformed
       paidby = "CHECKQUE";
    }//GEN-LAST:event_rbtCheckqueActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
         try {
             String sqlStmnt = "UPDATE fees SET os=?,java= ?,sen=?,cs=?,totalfees=?,feespaid=?,pending=?,paidby=? WHERE enrollmentno=?";
             preparedStatement = conn.prepareStatement(sqlStmnt);
             
           
             preparedStatement.setString(1,osy);
             preparedStatement.setString(2,javap);
             preparedStatement.setString(3,cse);
             preparedStatement.setString(4,sen);
             preparedStatement.setString(5,total+""); 
             preparedStatement.setString(6,txtPaid.getText());
            preparedStatement.setString(7,txtPending.getText());
             preparedStatement.setString(8,paidby);
               preparedStatement.setString(9,txtEnroll.getText());
                         
            boolean stmt =  preparedStatement.execute();
           
             JOptionPane.showMessageDialog(null, "record updated");
             System.out.println("inserted");
           } catch (Exception e) {
               JOptionPane.showMessageDialog(null,""+e.getMessage()); 
        }
         String sql = " SELECT * FROM fees";
        updateTable(sql); 
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jtbTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbTableMouseClicked
        btnUpdate.setEnabled(true);
        btnSave.setEnabled(false);
        int selectedRow = jtbTable.getSelectedRow();
       String selectedEnroll = jtbTable.getModel().getValueAt(selectedRow, 0).toString();
        try {
            String sql = "SELECT * FROM fees WHERE enrollmentno = "+selectedEnroll;
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(rs.next()){
                txtEnroll.setText(rs.getString("enrollmentno"));
                txtPaid.setText(rs.getString("feespaid"));
                txtPending.setText(rs.getString("pending"));
                String genderSelected = rs.getString("paidby");
                if("CASH".equals(genderSelected)){
                    paidby = "CASH";
                    rbtCash.setSelected(true);
                }else if("CHECKQUE".equals(genderSelected)){
                    paidby = "CHECKQUE";
                    rbtCheckque.setSelected(true);
                }
                String selectedOs = rs.getString("os");
              if("1".equals(selectedOs)){
                  osy = "1";
                  jcbOs.setSelected(true);
                  
              } 
              else{
                  jcbOs.setSelected(false);
                  osy = "0";
                  
              }
                  
              
               String selectedJava = rs.getString("java");
              if("1".equals(selectedJava)){
                  jcbJava.setSelected(true);
                  javap = "1";
                  
              } 
              else{
                  jcbJava.setSelected(false);
                  javap = "0";
              }
             
               String selectedSen = rs.getString("sen");
              if("1".equals(selectedSen)){
                  jcbSE.setSelected(true);
                  sen = "1";
                
              } 
              else{
                  jcbSE.setSelected(false);
                  sen = "0";
              }
               String selectedCs = rs.getString("cs");
              if("1".equals(selectedCs)){
                  jcbCS.setSelected(true);
                  cse = "1";
              } 
              else{
                  jcbCS.setSelected(false);
                  cse = "0";
              }
            }
           
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jtbTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Dashboard().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       String sql = " SELECT * FROM fees";
        updateTable(sql); 
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeesStu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeesStu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeesStu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeesStu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
          public void run() {
                new FeesStu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbCS;
    private javax.swing.JCheckBox jcbJava;
    private javax.swing.JCheckBox jcbOs;
    private javax.swing.JCheckBox jcbSE;
    private javax.swing.JTable jtbTable;
    private javax.swing.JRadioButton rbtCash;
    private javax.swing.JRadioButton rbtCheckque;
    private javax.swing.JTextField txtEnroll;
    private javax.swing.JTextField txtPaid;
    private javax.swing.JTextField txtPending;
    // End of variables declaration//GEN-END:variables
    int total = 0;
    int os = 5500;
    int se = 5000;
    int cs = 5200;
    int jpr = 7000;
    String osy = "0";
    String sen = "0";
    String cse = "0";
    String javap = "0";
    PreparedStatement preparedStatement = null;
    ResultSet rs = null;
    Connection conn = null;
    String paidby = null;
}
